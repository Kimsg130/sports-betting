
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mukim
 */
public class Schedule extends javax.swing.JFrame {
    DB_MAN DBM = new DB_MAN();
    String strSQL = "SELECT team FROM teams ORDER BY team desc;";
    /**
     * Creates new form Schedule
     */
    public Schedule() {
        initComponents();
        Schedule.super.getContentPane().setBackground(Color.WHITE);
        try {
            String strData = null;
            DBM.dbOpen();
            getCombobox(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException(btnSearch) : "+e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        radioWhole = new javax.swing.JRadioButton();
        radioPast = new javax.swing.JRadioButton();
        radioFuture = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboTeam = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        scheduleTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        buttonGroup1.add(radioWhole);
        radioWhole.setSelected(true);
        radioWhole.setText("전체기간");
        radioWhole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioWholeActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioPast);
        radioPast.setText("지난경기");

        buttonGroup1.add(radioFuture);
        radioFuture.setText("예정경기");

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel1.setText("경기 일정");

        jLabel2.setText("팀 : ");

        comboTeam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<ALL>" }));

        btnSearch.setText("검색");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        scheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "고유번호", "홈팀", "원정팀", "경기결과", "경기일정"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scheduleTable.setGridColor(new java.awt.Color(204, 204, 204));
        jScrollPane2.setViewportView(scheduleTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboTeam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(radioWhole)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioPast)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioFuture)))
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioWhole)
                            .addComponent(radioPast)
                            .addComponent(radioFuture))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioWholeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioWholeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioWholeActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        strSQL = "Select * From games";
        String team = comboTeam.getSelectedItem().toString();
        String selection = getRadiobtn();
        
        if(!team.equals("<ALL>")){
            strSQL += " WHERE (home_team = '"+team;
            strSQL += "' OR away_team = '"+team+"')";
            
            if(selection.equals("진행예정")){
                strSQL += " AND result = '진행예정'";
            }else if (selection.isEmpty()){
                strSQL += " AND result != '진행예정'";
            }
        }else{
            if(selection.equals("진행예정")){
                strSQL += " WHERE result = '진행예정'";
            }else if (selection.isEmpty()){
                strSQL += " WHERE result != '진행예정'";
            }
        }
        
        try {
            String strData = null;
            DBM.dbOpen();
            getDBData(strSQL);
            DBM.dbClose();
        } catch (Exception e) {
            System.out.println("SQLException(btnSearch) : "+e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //엔터키 구현
        if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            btnSearchActionPerformed(null);
        }
    }//GEN-LAST:event_formKeyPressed
    
//    public final void getDBData(String strQuery) {
//        String strOutput = "  고유번호\t  홈팀\t  원정팀\t결과\t        경기일정\n";
//        txtSchedule.setText(strOutput);
//
//        try {
//            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
//            while (DBM.DB_rs.next()) {
//                strOutput = "\n   ";
//                strOutput += DBM.DB_rs.getString("G_no")+"\t|";
//                strOutput += DBM.DB_rs.getString("home_team")+"\t";
//                strOutput += DBM.DB_rs.getString("away_team")+"\t";
//                strOutput += "| "+DBM.DB_rs.getString("result")+"\t|";
//                strOutput += DBM.DB_rs.getString("game_date")+"|";
//               
//                txtSchedule.append(strOutput);
//            }
//            DBM.DB_rs.close();
//        } catch (Exception e) {
//            System.out.println("SQLException(getDBData) : " + e.getMessage());
//        }
//    }
    
    public final void getDBData(String strQuery) {
        DefaultTableModel model = (DefaultTableModel)scheduleTable.getModel();
        int rowcount = model.getRowCount();
        for(int i = 0; i < rowcount; i++){
            model.removeRow(0);
        }

        try {
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
            while (DBM.DB_rs.next()) {
                ArrayList<String> rowData = new ArrayList<String>();
                rowData.add(DBM.DB_rs.getString("G_no"));
                rowData.add(DBM.DB_rs.getString("home_team"));
                rowData.add(DBM.DB_rs.getString("away_team"));
                rowData.add(DBM.DB_rs.getString("result"));
                rowData.add(DBM.DB_rs.getString("game_date"));
               
                model.addRow(rowData.toArray());
            }
            DBM.DB_rs.close();
        } catch (Exception e) {
            System.out.println("SQLException(getDBData) : " + e.getMessage());
        }
    }
    
    public final void getCombobox(String strQuery) {
        try {
            DBM.DB_rs = DBM.DB_stmt.executeQuery(strQuery);
            while (DBM.DB_rs.next()) {
                comboTeam.addItem(DBM.DB_rs.getString("team"));
            }
            DBM.DB_rs.close();
            
        } catch (Exception e) {
            System.out.println("SQLException(getCombobox) : " + e.getMessage());
        } 
    }
    
    public final String getRadiobtn(){
        if(radioWhole.isSelected()){
            return "whole";
        }else if(radioFuture.isSelected()){
            return "진행예정";
        }else{
            return "";
        }
    }
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Schedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboTeam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton radioFuture;
    private javax.swing.JRadioButton radioPast;
    private javax.swing.JRadioButton radioWhole;
    private javax.swing.JTable scheduleTable;
    // End of variables declaration//GEN-END:variables
}
